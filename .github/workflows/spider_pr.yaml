name: Run Changed Spiders in Pull Requests

# Only run on pushes
on:
  pull_request:
  push:
    branches-ignore:
    - 'master'
    paths:
    - 'locations/spiders/*.py'

jobs:
  test-spider:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v1
      with:
        fetch-depth: 1
    - name: Setup Python
      uses: actions/setup-python@master
      with:
        version: 3.7
    - name: Run Scrapy check
      run: |
        pip install pipenv
        pipenv install --deploy
        pipenv run scrapy check
    - name: Run spiders that changed
      run: |
        set -e o pipefail
        git --version
        PR_COMMENT_BODY="I ran the spiders in this pull request and got these results:\\n\\n|Spider|Results|Log|\\n|---|---|---|\\n"

        SPIDERS=`git diff --name-only ${{ github.head_ref }}..${{ github.base_ref }} | grep 'locations/spiders'`

        RUN_DIR="output"
        EXIT_CODE=0
        for spider in $SPIDERS
        do
            (>&2 echo "${spider} running ...")
            SPIDER_NAME=$(basename $spider)
            SPIDER_NAME=${SPIDER_NAME%.py}
            SPIDER_RUN_DIR="${RUN_DIR}/${SPIDER_NAME}"
            mkdir -p $SPIDER_RUN_DIR

            LOGFILE="${SPIDER_RUN_DIR}/log.txt"
            OUTFILE="${SPIDER_RUN_DIR}/output.geojson"

            scrapy runspider \
                -t geojson \
                -o "file://${OUTFILE}" \
                --loglevel=INFO \
                --logfile=$LOGFILE \
                -s CLOSESPIDER_TIMEOUT=60 \
                -s CLOSESPIDER_ERRORCOUNT=1 \
                $spider

            FAILURE_REASON="success"
            if grep -q "Spider closed (closespider_errorcount)" $LOGFILE; then
                (>&2 echo "${spider} exited with errors")
                EXIT_CODE=1
                FAILURE_REASON="exception"
            elif grep -q "Spider closed (closespider_timeout)" $LOGFILE; then
                (>&2 echo "${spider} exited because of timeout")
                FAILURE_REASON="timeout"
            fi

            FEATURE_COUNT=$(wc -l < ${OUTFILE} | tr -d ' ')

            if grep -q 'Stored geojson feed' $LOGFILE; then
                echo "${spider} has ${FEATURE_COUNT} features"
            fi

            PR_COMMENT_BODY="${PR_COMMENT_BODY}|[\`$spider\`](https://github.com/${{ github.repository }}/blob/${{ github.base_ref }}/${spider})|[${FEATURE_COUNT} items](${HTTP_URL_PREFIX}/output.geojson) ([Map](https://s3.amazonaws.com/placescraper-results/map.html?show=${HTTP_URL_PREFIX}/output.geojson))|Resulted in a \`${FAILURE_REASON}\` ([Log](${HTTP_URL_PREFIX}/log.txt))|\\n"

            (>&2 echo "${spider} done")
        done

        if [ -z "$SPIDERS" ]; then
            echo "No spiders run"
            exit 0
        fi

        echo "GitHub Event Number: ${{ github.event.number }}"
        if [ -z "$GITHUB_TOKEN" ]; then
            echo "No GITHUB_TOKEN set"
        else
            if [ "${{ github.event.number }}" != "false" ]; then
                curl \
                    -s \
                    -XPOST \
                    -H "Authorization: token ${GITHUB_TOKEN}" \
                    -d "{\"body\":\"${PR_COMMENT_BODY}\"}" \
                    "https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.number }}/comments"
                echo "Added a comment to pull https://github.com/${{ github.repository }}/pull/${{ github.event.number }}"
            else
                echo "Not posting to GitHub because no pull event number set"
            fi
        fi

        exit $EXIT_CODE
    - name: Archive
      uses: actions/upload-artifact@v1
      with:
        name: spider-output
        path: output/
